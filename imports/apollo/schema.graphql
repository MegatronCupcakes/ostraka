type Dependency {
    userId: String
    sequenceNumber: Int
}

type Trigger {
    action: String
    dependentUser: String
    dependentRelationship: [Dependency]
}

type History {
    _id: ID!
    userId: String!
    trigger: Trigger!
    description: String
    appliedValue: Float!
    ruleSet: String!
    active: Boolean!
    createdAt: String!
}

type Post {
    _id: ID!
    viewId: String!
    postedByTag: String
    postedBy: String
    postedById: String
    postedByProfilePic: String
    type: String
    images: [String]
    url: String
    caption: String
    tags: [String]
    tagIds: [String]
    mentions: [String]
    mentionIds: [String]
    comments: [String]
    likeCount: Int!
    dislikeCount: Int!
    shareCount: Int!
    liked: Boolean!
    disliked: Boolean!
    shared: Boolean!
    active: Boolean!
    createdAt: String!
}

type Comment {
    _id: ID!
    parentId: String
    userId: String
    postedByTag: String
    postedBy: String
    postedById: String
    postedByProfilePic: String
    comment: String
    tags: [String]
    tagIds: [String]
    mentions: [String]
    mentionIds: [String]
    comments: [String]
    likeCount: Int!
    dislikeCount: Int!
    shareCount: Int!
    liked: Boolean!
    disliked: Boolean!
    shared: Boolean!
    active: Boolean!
    createdAt: String!
}

type User {
    _id: ID!
    viewId: String!
    active: Boolean!
    profile: UserProfile
    invitedBy: String
    invited: [String]
    followedUsers: [String]
    followingCount: Int!
    followedTopics: [UserTag]
    reputationScore: Float
    followedByCount: Int!
    followed: Boolean!
    shareCount: Int!
    ostracizeCount: Int!
    ostracized: Boolean!
}

type UserProfile {
    firstName: String
    lastName: String
    profileTag: String
    profileImage: String
}

type Tag {
    _id: ID!
    viewId: String!
    tag: String!
    usage: [String]
    createdBy: String!
    usedBy: [String]
    sharedBy: [String]
    createdAt: String!
    active: Boolean!
}

type UserTag {
    _id: String!
    tag: String!
    createdAt: String!
    updatedAt: String!
}

union Topic = Post | Comment

union SharedContent = Tag | Post | Comment | User

type Query {
    getPost (_id: String): Post
    getPosts: [Post]
    getComment (_id: String): Comment
    getComments (parentId: String): [Comment]
    getTaggedPosts (tagId: String): [Post]
    getUserPosts (postedById: String): [Post]
    getTaggedComments (tagId: String): [Comment]
    getUserComments (postedById: String): [Comment]
    getProfile (_id: String): User
    getProfiles (userIds: [String]): [User]
    getTopic (tagId: String): [Topic]
    getTrendingTopics (limit: Int, span: String): [Tag]
    getTrendingProfiles (limit: Int, span: String): [User]
    getSharedContent (viewId: String, sharedById: String): SharedContent
    getUserHistory (userId: String): [History]
}
